{"version":3,"sources":["components/Layout/Footer.js","components/Layout/Header.js","store/types.js","store/actions/moviesAction.js","components/Movies/PopulerList.js","components/Movies/Populer.js","components/Movies/MovieDetail.js","store/actions/movieDetailAction.js","components/Movies/TopRatedList.js","components/Movies/TopRated.js","components/Contact.js","components/SearchResults.js","components/Homepage.js","components/Layout/Error.js","components/Movies/Upcoming.js","App.js","serviceWorker.js","store/reducers/movieReducer.js","store/reducers/movieDetailReducer.js","store/reducers/index.js","index.js"],"names":["Footer","className","href","txtColor","color","Header","forceRefresh","exact","to","style","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","class","GET_POPULER_MOVIES","GET_GENRE_IDS","GET_MOVIE_BY_ID","GET_MOVIE_TOP_RATED","GET_SEARCH_MOVIE","GET_UPCOMING_MOVIE","api","apiKey","getPopulerMovies","page","dispatch","axios","get","params","then","response","payload","data","getGenreIds","a","genres","getMovieTopRated","PopulerList","populerList","imgUrl","getMovieGenreName","count","results","slice","map","item","poster","poster_path","src","alt","title","genre_ids","vote_average","initialState","genreNames","Populer","props","state","bind","this","genreIds","forEach","genre","index","name","genreIndex","indexOf","genreName","pageNumber","selected","console","log","populerMovies","undefined","total_results","pageCount","total_pages","pageRangeDisplayed","previousLabel","nextLabel","onPageChange","breakClassName","breakLinkClassName","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","activeClassName","Component","mapDispatchToProps","connect","MovieDetail","match","getMovieById","movieDetail","movieById","imgBackgroundUrl","backdrop_path","sectionStyle","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","moment","release_date","format","runtime","production_countries","overview","TopRatedList","topRatedList","Trending","date","Date","setState","nowDate","movieTrending","movieTopRated","Contact","SearchList","searchList","searchText","Homepage","onChange","e","value","key","target","previousState","onSubmit","preventDefault","searchTextName","getSearchMovie","placeholder","searchMovie","SearchResults","query","Error","upcomingMovie","Upcoming","getUpComingMovie","upcomingMoviesResult","upcomingMovies","App","basename","process","path","TopRated","component","Boolean","window","location","hostname","loading","movieReducer","action","movieDetailReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aa02a5d6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n    return (\n\t\t<footer className=\"footer\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t<div className=\"footer__copyright\">\n\t\t\t\t\t\t\t<small>Geliştirici Selin Öser</small>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li><a href=\"mailto:selinoser@gmail.com\">İletişim: selinoser@gmail.com</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react'\nimport { BrowserRouter, NavLink } from 'react-router-dom';\n\nconst txtColor = {\n    color : \"#ff55a5\"\n}\n\nconst Header = () => {\n    return (\n        <BrowserRouter forceRefresh={true}>\n            <header className=\"header\">\n                <div className=\"header__wrap\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <nav className=\"navbar header__content\">\n                                    <NavLink exact to=\"/\" className=\"header__logo white\">\n                                        <h1 className=\"\"><span style={txtColor}>RE</span>MOVIE<span style={txtColor}>ACT</span></h1>\n                                    </NavLink>\n                                    <button className=\"navbar-toggler header__btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                        <span></span>\n                                        <span></span>\n                                        <span></span>\n                                    </button>\n                                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                                        <div className=\"header__line\"></div>\n                                        <ul class=\"navbar-nav header__nav\">\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/populer\"  className=\"header__nav-link\">POPÜLER</NavLink></li>\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/top-rated\" className=\"header__nav-link\">EN ÇOK BEĞENİLENLER</NavLink></li>\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/upcoming\" className=\"header__nav-link\">GELECEK FİLMLER</NavLink></li>\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/contact\" className=\"header__nav-link\">İLETİŞİM</NavLink></li>\n                                        </ul>\n                                    </div>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </BrowserRouter>\n    )\n}\n\nexport default Header;\n","export const GET_POPULER_MOVIES = 'GET_POPULER_MOVIES';\nexport const GET_GENRE_IDS = \"GET_GENRE_IDS\";\nexport const GET_MOVIE_BY_ID = \"GET_MOVIE_BY_ID\";\nexport const GET_MOVIE_TOP_RATED = \"GET_MOVIE_TOP_RATED\";\nexport const GET_SEARCH_MOVIE = \"GET_SEARCH_MOVIE\";\nexport const GET_UPCOMING_MOVIE = \"GET_UPCOMING_MOVIE\";","import { GET_POPULER_MOVIES, GET_GENRE_IDS, GET_MOVIE_TOP_RATED, GET_SEARCH_MOVIE, GET_UPCOMING_MOVIE } from \"../types\";\nimport axios from \"axios\";\n\nconst api = \"https://api.themoviedb.org/3/\";\nconst apiKey = \"27359f6ab80a87d204461de63158f3bb\";\n\n\nexport function getPopulerMovies (page) {\n  return function(dispatch) {\n     axios.get(`${api}movie/popular?api_key=${apiKey}&language=tr-TR`, {\n      params: {\n        page: page\n      }\n    })\n    .then(response => {\n      dispatch({\n        type: GET_POPULER_MOVIES,\n        payload: response.data\n      });\n    })\n  };\n}\n\nexport const getGenreIds = () => async dispatch => {\n  await axios.get(`${api}genre/movie/list?api_key=${apiKey}&language=tr-TR`)\n  .then(response => {\n    dispatch({\n      type: GET_GENRE_IDS,\n      payload: response.data.genres\n    });\n  })\n};\n\nexport function getMovieTopRated() {\n  return function(dispatch) {\n     axios.get(`${api}movie/top_rated?api_key=${apiKey}&language=tr-TR`)\n    .then(response => {\n      dispatch({\n        type: GET_MOVIE_TOP_RATED,\n        payload: response.data\n      });\n    })\n  };\n}\n\nexport function getSearchMovie(query, page) {\n  return function(dispatch) {\n     axios.get(`${api}search/movie?api_key=${apiKey}&query=${query}&page=${page}&language=tr-TR`, {\n      params: {\n        query: query,\n        page: page\n      }\n    })\n    .then(response => {\n      dispatch({\n        type: GET_SEARCH_MOVIE,\n        payload: response.data\n      });\n    })\n  };\n}\n\n\nexport const getUpComingMovie = () => async dispatch => {\n  axios.get(`${api}movie/upcoming?api_key=${apiKey}&language=tr-TR&region=tr`)\n  .then(response => {\n    dispatch({\n      type: GET_UPCOMING_MOVIE,\n      payload: response.data\n    });\n  })\n};\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { MdStar } from 'react-icons/md';\n\nconst PopulerList = ({populerList, imgUrl, getMovieGenreName, count, className}) => {\n    if(populerList.results != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    {\n                        populerList.results.slice(0, count).map(item => {\n                            const poster = item.poster_path == null ? \"https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png\" : imgUrl + item.poster_path;\n                            return(\n                                <div className={className} key={item.id}>\n                                    <div className=\"card\">\n                                        <div className=\"card__cover\">\n                                        <img src={ poster } alt={item.title} />\n                                            <Link to={'/movie-detail/'+ item.id} className=\"card__play\">  <i className=\"icon ion-ios-play\"></i> </Link>\n                                        </div>\n                                        <div className=\"card__content\">\n                                            <h3 className=\"card__title\">{ item.title}</h3>\n                                            <span className=\"card__category\">\n                                                <Link>{getMovieGenreName(item.genre_ids)}</Link>\n                                            </span>\n                                            <span className=\"card__rate\"><MdStar></MdStar>{item.vote_average}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }else {\n        return(\n            <div>Yükleniyor...</div>\n        )\n    }\n};\n\nexport default PopulerList;","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {getPopulerMovies, getGenreIds } from '../../store/actions/moviesAction';\nimport ReactPaginate from 'react-paginate';\nimport PopulerList from './PopulerList';\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\"\n\nconst initialState = {\n    genreNames : []\n}\n\nclass Populer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.getPopulerMovies();\n        this.props.getGenreIds();\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n      \n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n    onPageChange(page){\n        var pageNumber  = page.selected + 1\n        this.props.getPopulerMovies(pageNumber);\n        console.log(this.props.getPopulerMovies)\n    }\n\n    render() {\n        const populerMovies = this.props.populerMovies.populerMovies;\n        this.state.genreNames = this.props.populerMovies.genreIds;\n        if(populerMovies.results !== undefined) {\n            return (\n                <div>\n                    <section className=\"section section--first section--bg\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"section__wrap\">\n                                        <h2 className=\"section__title\">Popüler Filmler</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <br />\n                    <div className=\"catalog\">\n                        <PopulerList populerList={populerMovies} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={this.props.populerMovies.populerMovies.total_results} className={\"col-6 col-sm-4 col-lg-3 col-xl-3\"}></PopulerList>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <p className=\"section__text\">{populerMovies.total_results} sonuç görüntüleniyor...</p>\n                            <div className=\"col-12\">\n                                <ReactPaginate pageCount={populerMovies.total_pages} pageRangeDisplayed={2} previousLabel=\"<\" nextLabel=\">\" \n                                    onPageChange={(page) => this.onPageChange(page)} \n                                    breakClassName={'paginator__item'}\n                                    breakLinkClassName={'page-link'}\n                                    containerClassName={'paginator'}\n                                    pageClassName={'paginator__item'}\n                                    pageLinkClassName={'page-link'}\n                                    previousClassName={'paginator__item'}\n                                    previousLinkClassName={'paginator__item paginator__item--prev'}\n                                    nextClassName={'paginator__item'}\n                                    activeClassName={'paginator__item paginator__item--active'} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )     \n        }else {\n            return ( <div>Yükleniyor</div>)\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies:state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getPopulerMovies,\n    getGenreIds\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Populer)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getMovieById } from '../../store/actions/movieDetailAction';\nimport { MdStar } from 'react-icons/md';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nclass MovieDetail extends Component {\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        this.props.getMovieById(id)\n    }\n\n    render() {\n        const movieDetail = this.props.movieById.movieById;\n        if(movieDetail != undefined) {\n            const imgBackgroundUrl = \"https://image.tmdb.org/t/p/original/\" + movieDetail.backdrop_path;\n            const imgUrl = \"https://image.tmdb.org/t/p/original/\";\n            const poster = movieDetail.poster_path == null ? \"https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png\" : imgUrl + movieDetail.poster_path;\n\n            var sectionStyle = {\n                backgroundImage: `url(${imgBackgroundUrl})`,\n                backgroundSize : \"cover\",\n                backgroundPosition : \"center center\",\n                backgroundRepeat: \"no-repeat no-repeat\"\n            };\n          \n            return (\n                <section className=\"details\">\n                    <div className=\"details__bg\" style={sectionStyle}></div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <h1 className=\"details__title\">{movieDetail.title}</h1>\n                            </div>\n                            <div className=\"col-12\">\n                                <div className=\"card card--details card--series\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 col-sm-4 col-md-4 col-lg-3 col-xl-3\">\n                                            <div className=\"card__cover\">\n                                                <img src={poster} alt={movieDetail.title} />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 col-sm-8 col-md-8 col-lg-9 col-xl-9\">\n                                            <div className=\"card__content\">\n                                                <div className=\"card__wrap\">\n                                                    <span className=\"card__rate\"><MdStar></MdStar> {movieDetail.vote_average}</span>\n                                                </div>\n                                                <ul className=\"card__meta\">\n                                                    <li><span>Türler:</span> { movieDetail.genres.map(item=> { return (<Link>{item.name}</Link>) }) }</li>\n                                                    <li><span>Yayın Tarihi:</span> {moment(movieDetail.release_date).format('DD-MM-YYYY') }</li>\n                                                    <li><span>Süre:</span> {movieDetail.runtime} dk</li>\n                                                    <li><span>Ülkeler:</span> { movieDetail.production_countries.map(item=> { return (<Link>{item.name}</Link>) })} </li>\n                                                </ul>\n                                                <div className=\"card__description card__description--details\">\n                                                    {movieDetail.overview}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )\n        }else {\n            return(\n                <div>Yükleniyor...</div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    movieById: state.movieById,\n})\n\nconst mapDispatchToProps = {\n\tgetMovieById\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail)","import { GET_MOVIE_BY_ID } from \"../types\";\nimport axios from \"axios\";\n\nconst api = \"https://api.themoviedb.org/3/\";\nconst apiKey = \"27359f6ab80a87d204461de63158f3bb\";\n\n\nexport function getMovieById (id) {\n  return function(dispatch) {\n     axios.get(`${api}movie/${id}?api_key=${apiKey}&language=tr-TR`, {\n      params: {\n        id: id\n      }\n    })\n    .then(response => {\n      dispatch({\n        type: GET_MOVIE_BY_ID,\n        payload: response.data\n      });\n    })\n  };\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { MdStar } from 'react-icons/md';\n\nconst TopRatedList = ({topRatedList, imgUrl, getMovieGenreName, count, className}) => {\n    if(topRatedList != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    {\n                        topRatedList.results.slice(0, count).map(item => {\n                            const poster = item.poster_path == null ? \"https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png\" : imgUrl + item.poster_path;\n                            return(\n                                <div className={className} key={item.id}>\n                                    <div className=\"card\">\n                                        <div className=\"card__cover\">\n                                        <img src={ poster } alt={item.title} />\n                                            <Link to={'/movie-detail/'+ item.id} className=\"card__play\">  <i className=\"icon ion-ios-play\"></i> </Link>\n                                        </div>\n                                        <div className=\"card__content\">\n                                            <h3 className=\"card__title\"><Link>{ item.title}</Link></h3>\n                                            <span className=\"card__category\">\n                                                <Link>{getMovieGenreName(item.genre_ids)}</Link> \n                                            </span>\n                                            <span className=\"card__rate\"><MdStar></MdStar>{item.vote_average}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }else {\n        return(\n            <div>Yükleniyor...</div>\n        )\n    }\n};\n\nexport default TopRatedList;","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {getGenreIds,getMovieTopRated} from '../../store/actions/moviesAction';\nimport moment from 'moment';\nimport TopRatedList from './TopRatedList';\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\"\n\nconst initialState = {\n    genreNames : [],\n}\n\nclass Trending extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n      }\n\n    componentDidMount(){\n        const date = moment(new Date()).format(\"YYYY-MM-DD\")\n        this.props.getMovieTopRated()\n        this.props.getGenreIds()\n        this.setState({\n            nowDate: date\n        })\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n      \n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n    render() {\n        const movieTrending = this.props.populerMovies.movieTopRated;\n        this.state.genreNames = this.props.populerMovies.genreIds;\n        if(movieTrending !== undefined) {\n            return (\n                <div>\n                    <section className=\"section section--first section--bg\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"section__wrap\">\n                                        <h2 className=\"section__title\">En çok beğenilen 10 Film</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <br />\n                    <div className=\"catalog\">\n                        <TopRatedList topRatedList={movieTrending} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={10} className={\"col-6 col-sm-4 col-lg-3 col-xl-3\"}></TopRatedList>\n                    </div>\n                </div>\n            )\n        }else {\n            return ( <div>Yükleniyor</div>)\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies:state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getMovieTopRated,\n    getGenreIds\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trending)","import React from 'react'\n\nconst Contact = () => {\n    return (\n        <div>\n            <section class=\"section section--first section--bg\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"section__wrap\">\n                                <h2 class=\"section__title\">İletişim</h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section class=\"section\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-12 d-flex justify-content-center align-items-center\">\n                            <div>\n                                <p class=\"section__text\">Selin Öser | 2020</p>\n                                <p class=\"section__text section__text--last-with-margin\">Github : <a href=\"https://github.com/selinoser\">https://github.com/selinoser</a></p>\n                                <p class=\"section__text section__text--last-with-margin\">Linkedin : <a href=\"https://www.linkedin.com/in/selinoser/\">https://www.linkedin.com/in/selinoser/</a></p>\n                                <p class=\"section__text section__text--last-with-margin\">İletişim : <a href=\"mailto:selinoser@gmail.com \">selinoser@gmail.com</a></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default Contact\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { MdStar } from 'react-icons/md';\n\nconst SearchList = ({searchList, imgUrl, getMovieGenreName, onPageChange }) => {\n    if(searchList.results != null) {\n        return (\n            <div className=\"catalog\">\n                <div className=\"container\">\n                    <br/>\n                    <h1 className=\"details__title text-center\">Arama Sonuçları</h1>\n                    <div className=\"row\">\n                        {\n                            searchList.results.map(item => {\n                                const poster = item.poster_path == null ? \"https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png\" : imgUrl + item.poster_path;\n                                console.log(poster)\n                                return(\n                                    <div className=\"col-6 col-sm-4 col-lg-3 col-xl-3\" key={item.id}>\n                                        <div className=\"card\">\n                                            <div className=\"card__cover\">\n                                            <img src={ poster } alt={item.title}/>\n                                                <Link to={'/movie-detail/'+ item.id} className=\"card__play\">  <i className=\"icon ion-ios-play\"></i> </Link>\n                                            </div>\n                                            <div className=\"card__content\">\n                                                <h3 className=\"card__title\">{ item.title}</h3>\n                                                <span className=\"card__category\">\n                                                    <Link>{getMovieGenreName(item.genre_ids)}</Link>\n                                                </span>\n                                                <span className=\"card__rate\"><MdStar></MdStar>{item.vote_average}</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                         \n                    </div>\n                </div>\n            </div>\n        );\n    }else {\n        return(\n            <div>Yükleniyor...</div>\n        )\n    }\n};\n\nexport default SearchList;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getSearchMovie, getGenreIds, getPopulerMovies, getMovieTopRated} from '../store/actions/moviesAction';\nimport SearchResults from './SearchResults';\nimport PopulerList from './Movies/PopulerList';\nimport { Link } from 'react-router-dom';\nimport TopRatedList from './Movies/TopRatedList';\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\"\n\nconst initialState = {\n    genreNames : [],\n    searchText : null\n}\n\nclass Homepage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.getPopulerMovies();\n        this.props.getGenreIds();\n        this.props.getMovieTopRated();\n    }\n      \n    onChange = (e) => {\n        let key = e.target.name;\n        var value = '';\n        value = e.target.value;\n\n        this.setState(previousState => {\n            return {\n                ...previousState,\n                [key]: value\n            };\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const searchTextName = this.state.searchText;\n        this.props.getSearchMovie(searchTextName)\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n\n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n      \n    render() {\n        if(this.props.populerMovies != null) {\n            this.state.genreNames = this.props.populerMovies.genreIds\n        }\n        return (\n            <div>\n                <section className=\"section section--first section--bg\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"header__search-content\">\n                                <form className=\"col-12\" onSubmit = {(e) => this.onSubmit(e)}>\n                                    <input type=\"text\" name=\"searchText\" onChange={this.onChange} placeholder=\"Film Adını Yazınız...\" />\n                                    <button>Ara</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                {\n                    this.props.populerMovies.searchMovie.results != null ? (\n                        <SearchResults searchList={this.props.populerMovies.searchMovie} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} onPageChange={this.onPageChange}></SearchResults>\n                    ) : (\n                        <div>\n                            <div className=\"catalog\">\n                                <h2 className=\"content__title text-center\">Popüler Filmler</h2>\n                                <PopulerList populerList={this.props.populerMovies.populerMovies} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={4} className={\"col-6 col-sm-3 col-lg-3 col-xl-3\"}></PopulerList>\n                                <Link to=\"/populer\" className=\"section__btn\">Tümünü Gör</Link>\n                            </div>\n                            <div className=\"catalog\">\n                                <h2 className=\"content__title text-center\">En Çok Beğenilen Filmler</h2>\n                                <TopRatedList topRatedList={this.props.populerMovies.movieTopRated} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={4} className={\"col-6 col-sm-3 col-lg-3 col-xl-3\"}></TopRatedList>\n                                <Link to=\"/top-rated\" className=\"section__btn\">Tümünü Gör</Link>\n                            </div>\n                        </div>\n                    )\n                }\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies:state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getSearchMovie,\n    getGenreIds,\n    getPopulerMovies,\n    getMovieTopRated\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage)\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Error = () => {\n    return (\n        <div className=\"page-404 section--bg\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"page-404__wrap\">\n                            <div className=\"page-404__content\">\n                                <h1 className=\"page-404__title\">404</h1>\n                                <p className=\"page-404__text\">Aradığınız sayfa bulunamadı!!!</p>\n                                <Link to=\"/\" className=\"page-404__btn\">Ana Sayfaya Dön</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Error;\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {getUpComingMovie, getGenreIds} from '../../store/actions/moviesAction';\nimport moment from 'moment';\nimport {Link} from 'react-router-dom'\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\";\n\nconst initialState = {\n    genreNames : [],\n    upcomingMovie : []\n}\n\nclass Upcoming extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n      }\n\n    componentDidMount(){\n        this.props.getUpComingMovie()\n        this.props.getGenreIds()\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n      \n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n    render() {\n        const upcomingMoviesResult = this.props.populerMovies.upcomingMovies;\n        this.state.genreNames = this.props.populerMovies.genreIds;\n        if(upcomingMoviesResult.results !== undefined) {\n            return (\n                <div>\n                    <section className=\"section section--first section--bg\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"section__wrap\">\n                                        <h2 className=\"section__title\">Vizyona Girecek Filmler</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <br />\n                    <div className=\"catalog\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                {\n                                    upcomingMoviesResult.results.map(item => {\n                                        const poster = item.poster_path == null ? \"https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png\" : imgUrl + item.poster_path;\n                                        return(\n                                            <div className=\"col-12\" key={item.id}>\n                                                <div className=\"card card--list\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 col-sm-4 col-md-2\">\n                                                            <div className=\"card__cover\">\n                                                            <img src={ poster } alt={item.title}/>\n                                                                \n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"col-12 col-sm-8 col-md-10\">\n                                                            <div className=\"card__content\">\n                                                                <h3 className=\"card__category text__white\">\n                                                                    Vizyon Tarihi: { item.release_date == null ? \"\" : moment(item.release_date).format('DD-MM-YYYY')}\n                                                                </h3>\n                                                                <h3 className=\"card__title\">{item.title}</h3>\n                                                                <span className=\"card__category\">\n                                                                    <Link>{this.getMovieGenreName(item.genre_ids)}</Link> \n                                                                </span>\n\n                                                                <div className=\"card__description\">\n                                                                    <p>{item.overview}</p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }else {\n            return ( <div>Yükleniyor</div>)\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies: state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getUpComingMovie,\n    getGenreIds\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upcoming)","import './App.css';\nimport './assets/css/bootstrap-grid.min.css';\nimport './assets/css/bootstrap-reboot.min.css';\nimport './assets/css/default-skin.css';\nimport './assets/css/main.css';\n\nimport Footer from './components/Layout/Footer';\nimport Header from './components/Layout/Header';\nimport Populer from './components/Movies/Populer';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport MovieDetail from './components/Movies/MovieDetail';\nimport TopRated from './components/Movies/TopRated';\nimport Contact from './components/Contact';\nimport Homepage from './components/Homepage';\nimport Error from './components/Layout/Error';\nimport Upcoming from './components/Movies/Upcoming';\n\nfunction App() {\n  return (\n      <div>\n        <main>\n          <Header></Header>\n          <BrowserRouter forceRefresh={true} basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path={process.env.PUBLIC_URL + '/'} exact ><Homepage></Homepage></Route>\n                <Route path={process.env.PUBLIC_URL + '/populer'} exact ><Populer></Populer></Route>\n                <Route path={process.env.PUBLIC_URL + '/top-rated'} exact ><TopRated></TopRated></Route>\n                <Route path={process.env.PUBLIC_URL + '/upcoming'} exact ><Upcoming></Upcoming></Route>\n                <Route path={process.env.PUBLIC_URL + '/contact'} exact ><Contact></Contact></Route>\n                <Route path={process.env.PUBLIC_URL + '/movie-detail/:id'} exact component={MovieDetail}></Route>\n                <Route component={Error}></Route>\n            </Switch>\n            </BrowserRouter>\n          </main>\n          <Footer></Footer>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import { GET_POPULER_MOVIES, GET_GENRE_IDS, GET_MOVIE_TOP_RATED, GET_SEARCH_MOVIE, GET_UPCOMING_MOVIE } from '../types';\n\nconst initialState = {\n    populerMovies:[],\n    genreIds: [],\n    page : 1,\n    query : null,\n    movieTopRated : null,\n    searchMovie: [],\n    upcomingMovies : [],\n    loading:true\n};\n\nconst movieReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_POPULER_MOVIES:\n        return {\n            ...state,\n            populerMovies:action.payload,\n            page:1,\n            loading:false\n\n        }\n        case GET_GENRE_IDS:\n        return {\n            ...state,\n            genreIds:action.payload,\n            loading:false\n        }\n        case GET_MOVIE_TOP_RATED:\n        return {\n            ...state,\n            movieTopRated: action.payload,\n            loading: false\n        }\n        case GET_SEARCH_MOVIE:\n        return {\n            ...state,\n            searchMovie: action.payload,\n            page:1,\n            loading: false\n        }\n        case GET_UPCOMING_MOVIE:\n        return {\n            ...state,\n            upcomingMovies: action.payload,\n            loading: false\n        }\n        default: return state\n    }\n};\n\nexport default movieReducer;","import { GET_MOVIE_BY_ID} from '../types'\n\nconst initialState = {\n    movieById : null,\n    loading: true\n}\n\nconst movieDetailReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_MOVIE_BY_ID:\n        return {\n            ...state,\n            movieById: action.payload,\n            loading: false\n        }\n        default: return state\n    }\n}\n\nexport default movieDetailReducer;","import { combineReducers } from \"redux\";\nimport movieReducer from \"./movieReducer\";\nimport movieDetailReducer from \"./movieDetailReducer\";\n\nexport default combineReducers({\n  populerMovies: movieReducer,\n  movieById: movieDetailReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n\nimport rootReducer from './store/reducers'\n\nconst initalState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middleware)))\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}