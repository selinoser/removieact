[{"/Users/selinoser/Desktop/github/removieact/src/index.js":"1","/Users/selinoser/Desktop/github/removieact/src/serviceWorker.js":"2","/Users/selinoser/Desktop/github/removieact/src/App.js":"3","/Users/selinoser/Desktop/github/removieact/src/store/reducers/index.js":"4","/Users/selinoser/Desktop/github/removieact/src/components/Homepage.js":"5","/Users/selinoser/Desktop/github/removieact/src/components/Contact.js":"6","/Users/selinoser/Desktop/github/removieact/src/components/Layout/Header.js":"7","/Users/selinoser/Desktop/github/removieact/src/components/Movies/Upcoming.js":"8","/Users/selinoser/Desktop/github/removieact/src/components/Movies/Populer.js":"9","/Users/selinoser/Desktop/github/removieact/src/components/Movies/MovieDetail.js":"10","/Users/selinoser/Desktop/github/removieact/src/components/Layout/Error.js":"11","/Users/selinoser/Desktop/github/removieact/src/components/Layout/Footer.js":"12","/Users/selinoser/Desktop/github/removieact/src/components/Movies/TopRated.js":"13","/Users/selinoser/Desktop/github/removieact/src/store/reducers/movieReducer.js":"14","/Users/selinoser/Desktop/github/removieact/src/store/reducers/movieDetailReducer.js":"15","/Users/selinoser/Desktop/github/removieact/src/components/Movies/PopulerList.js":"16","/Users/selinoser/Desktop/github/removieact/src/components/Movies/TopRatedList.js":"17","/Users/selinoser/Desktop/github/removieact/src/components/SearchResults.js":"18","/Users/selinoser/Desktop/github/removieact/src/store/actions/movieDetailAction.js":"19","/Users/selinoser/Desktop/github/removieact/src/store/actions/moviesAction.js":"20","/Users/selinoser/Desktop/github/removieact/src/store/types.js":"21"},{"size":1090,"mtime":1609032776323,"results":"22","hashOfConfig":"23"},{"size":5344,"mtime":1608510958182,"results":"24","hashOfConfig":"23"},{"size":1541,"mtime":1609032145346,"results":"25","hashOfConfig":"23"},{"size":240,"mtime":1608769906579,"results":"26","hashOfConfig":"23"},{"size":4567,"mtime":1609025767768,"results":"27","hashOfConfig":"23"},{"size":1584,"mtime":1608906161185,"results":"28","hashOfConfig":"23"},{"size":2485,"mtime":1609032910870,"results":"29","hashOfConfig":"23"},{"size":5306,"mtime":1609026533043,"results":"30","hashOfConfig":"23"},{"size":4136,"mtime":1609025680373,"results":"31","hashOfConfig":"23"},{"size":4119,"mtime":1609025870237,"results":"32","hashOfConfig":"23"},{"size":846,"mtime":1609023978532,"results":"33","hashOfConfig":"23"},{"size":475,"mtime":1608944663626,"results":"34","hashOfConfig":"23"},{"size":2747,"mtime":1609025698395,"results":"35","hashOfConfig":"23"},{"size":1245,"mtime":1608943425709,"results":"36","hashOfConfig":"23"},{"size":415,"mtime":1608943657025,"results":"37","hashOfConfig":"23"},{"size":1988,"mtime":1609025902588,"results":"38","hashOfConfig":"23"},{"size":1999,"mtime":1609025988616,"results":"39","hashOfConfig":"23"},{"size":2337,"mtime":1609025780691,"results":"40","hashOfConfig":"23"},{"size":480,"mtime":1608746541576,"results":"41","hashOfConfig":"23"},{"size":1721,"mtime":1608937881727,"results":"42","hashOfConfig":"23"},{"size":317,"mtime":1608895822708,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"biu6ha",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/selinoser/Desktop/github/removieact/src/index.js",["95"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n\nimport rootReducer from './store/reducers'\n\nconst initalState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middleware)))\n\n\nReactDOM.render(\n  <HashRouter>\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["96","97"],"/Users/selinoser/Desktop/github/removieact/src/serviceWorker.js",[],"/Users/selinoser/Desktop/github/removieact/src/App.js",["98"],"import './App.css';\nimport './assets/css/bootstrap-grid.min.css';\nimport './assets/css/bootstrap-reboot.min.css';\nimport './assets/css/default-skin.css';\nimport './assets/css/main.css';\n\nimport Footer from './components/Layout/Footer';\nimport Header from './components/Layout/Header';\nimport Populer from './components/Movies/Populer';\n\nimport { BrowserRouter, Route, Switch, HashRouter} from 'react-router-dom';\nimport MovieDetail from './components/Movies/MovieDetail';\nimport TopRated from './components/Movies/TopRated';\nimport Contact from './components/Contact';\nimport Homepage from './components/Homepage';\nimport Error from './components/Layout/Error';\nimport Upcoming from './components/Movies/Upcoming';\n\nfunction App() {\n  return (\n      <div>\n        <main>\n          <Header></Header>\n          <HashRouter forceRefresh={true} basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/\" exact ><Homepage></Homepage></Route>\n                <Route path=\"/populer\" exact ><Populer></Populer></Route>\n                <Route path=\"/top-rated\" exact ><TopRated></TopRated></Route>\n                <Route path=\"/upcoming\" exact ><Upcoming></Upcoming></Route>\n                <Route path=\"/contact\" exact ><Contact></Contact></Route>\n                <Route path=\"/movie-detail/:id\" exact component={MovieDetail}></Route>\n                <Route component={Error}></Route>\n            </Switch>\n            </HashRouter>\n          </main>\n          <Footer></Footer>\n      </div>\n  );\n}\n\nexport default App;\n","/Users/selinoser/Desktop/github/removieact/src/store/reducers/index.js",[],"/Users/selinoser/Desktop/github/removieact/src/components/Homepage.js",["99"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getSearchMovie, getGenreIds, getPopulerMovies, getMovieTopRated} from '../store/actions/moviesAction';\nimport SearchResults from './SearchResults';\nimport PopulerList from './Movies/PopulerList';\nimport { Link } from 'react-router-dom';\nimport TopRatedList from './Movies/TopRatedList';\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\"\n\nconst initialState = {\n    genreNames : [],\n    searchText : null\n}\n\nclass Homepage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.getPopulerMovies();\n        this.props.getGenreIds();\n        this.props.getMovieTopRated();\n    }\n      \n    onChange = (e) => {\n        let key = e.target.name;\n        var value = '';\n        value = e.target.value;\n\n        this.setState(previousState => {\n            return {\n                ...previousState,\n                [key]: value\n            };\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const searchTextName = this.state.searchText;\n        this.props.getSearchMovie(searchTextName)\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n\n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n      \n    render() {\n        if(this.props.populerMovies != null) {\n            this.state.genreNames = this.props.populerMovies.genreIds\n        }\n        return (\n            <div>\n                <section className=\"section section--first section--bg\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"header__search-content\">\n                                <form className=\"col-12\" onSubmit = {(e) => this.onSubmit(e)}>\n                                    <input type=\"text\" name=\"searchText\" onChange={this.onChange} placeholder=\"Film Adını Yazınız...\" />\n                                    <button>Ara</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                {\n                    this.props.populerMovies.searchMovie.results != null ? (\n                        <SearchResults searchList={this.props.populerMovies.searchMovie} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} onPageChange={this.onPageChange}></SearchResults>\n                    ) : (\n                        <div>\n                            <div className=\"catalog\">\n                                <h2 className=\"content__title text-center\">Popüler Filmler</h2>\n                                <PopulerList populerList={this.props.populerMovies.populerMovies} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={4} className={\"col-6 col-sm-3 col-lg-3 col-xl-3\"}></PopulerList>\n                                <Link to=\"/populer\" className=\"section__btn\">Tümünü Gör</Link>\n                            </div>\n                            <div className=\"catalog\">\n                                <h2 className=\"content__title text-center\">En Çok Beğenilen Filmler</h2>\n                                <TopRatedList topRatedList={this.props.populerMovies.movieTopRated} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={4} className={\"col-6 col-sm-3 col-lg-3 col-xl-3\"}></TopRatedList>\n                                <Link to=\"/top-rated\" className=\"section__btn\">Tümünü Gör</Link>\n                            </div>\n                        </div>\n                    )\n                }\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies:state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getSearchMovie,\n    getGenreIds,\n    getPopulerMovies,\n    getMovieTopRated\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage)\n","/Users/selinoser/Desktop/github/removieact/src/components/Contact.js",[],"/Users/selinoser/Desktop/github/removieact/src/components/Layout/Header.js",["100","101"],"import React from 'react'\nimport { BrowserRouter, NavLink } from 'react-router-dom';\n\nconst txtColor = {\n    color : \"#ff55a5\"\n}\n\nconst Header = () => {\n    return (\n        <HashRouter forceRefresh={true}>\n            <header className=\"header\">\n                <div className=\"header__wrap\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <nav className=\"navbar header__content\">\n                                    <NavLink exact to=\"/\" className=\"header__logo white\">\n                                        <h1 className=\"\"><span style={txtColor}>RE</span>MOVIE<span style={txtColor}>ACT</span></h1>\n                                    </NavLink>\n                                    <button className=\"navbar-toggler header__btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                        <span></span>\n                                        <span></span>\n                                        <span></span>\n                                    </button>\n                                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                                        <div className=\"header__line\"></div>\n                                        <ul class=\"navbar-nav header__nav\">\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/populer\" className=\"header__nav-link\">POPÜLER</NavLink></li>\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/top-rated\" className=\"header__nav-link\">EN ÇOK BEĞENİLENLER</NavLink></li>\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/upcoming\" className=\"header__nav-link\">GELECEK FİLMLER</NavLink></li>\n                                            <li className=\"header__nav-item nav-item\"><NavLink exact to=\"/contact\" className=\"header__nav-link\">İLETİŞİM</NavLink></li>\n                                        </ul>\n                                    </div>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </HashRouter>\n    )\n}\n\nexport default Header;\n","/Users/selinoser/Desktop/github/removieact/src/components/Movies/Upcoming.js",["102"],"import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {getUpComingMovie, getGenreIds} from '../../store/actions/moviesAction';\nimport moment from 'moment';\nimport {Link} from 'react-router-dom'\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\";\n\nconst initialState = {\n    genreNames : [],\n    upcomingMovie : []\n}\n\nclass Upcoming extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n      }\n\n    componentDidMount(){\n        this.props.getUpComingMovie()\n        this.props.getGenreIds()\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n      \n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n    render() {\n        const upcomingMoviesResult = this.props.populerMovies.upcomingMovies;\n        this.state.genreNames = this.props.populerMovies.genreIds;\n        if(upcomingMoviesResult.results !== undefined) {\n            return (\n                <div>\n                    <section className=\"section section--first section--bg\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"section__wrap\">\n                                        <h2 className=\"section__title\">Vizyona Girecek Filmler</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <br />\n                    <div className=\"catalog\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                {\n                                    upcomingMoviesResult.results.map(item => {\n                                        const poster = item.poster_path == null ? \"https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png\" : imgUrl + item.poster_path;\n                                        return(\n                                            <div className=\"col-12\" key={item.id}>\n                                                <div className=\"card card--list\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 col-sm-4 col-md-2\">\n                                                            <div className=\"card__cover\">\n                                                            <img src={ poster } alt={item.title}/>\n                                                                \n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"col-12 col-sm-8 col-md-10\">\n                                                            <div className=\"card__content\">\n                                                                <h3 className=\"card__category text__white\">\n                                                                    Vizyon Tarihi: { item.release_date == null ? \"\" : moment(item.release_date).format('DD-MM-YYYY')}\n                                                                </h3>\n                                                                <h3 className=\"card__title\">{item.title}</h3>\n                                                                <span className=\"card__category\">\n                                                                    <Link>{this.getMovieGenreName(item.genre_ids)}</Link> \n                                                                </span>\n\n                                                                <div className=\"card__description\">\n                                                                    <p>{item.overview}</p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }else {\n            return ( <div>Yükleniyor</div>)\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies: state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getUpComingMovie,\n    getGenreIds\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upcoming)","/Users/selinoser/Desktop/github/removieact/src/components/Movies/Populer.js",["103"],"import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {getPopulerMovies, getGenreIds } from '../../store/actions/moviesAction';\nimport ReactPaginate from 'react-paginate';\nimport PopulerList from './PopulerList';\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\"\n\nconst initialState = {\n    genreNames : []\n}\n\nclass Populer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.getPopulerMovies();\n        this.props.getGenreIds();\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n      \n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n    onPageChange(page){\n        var pageNumber  = page.selected + 1\n        this.props.getPopulerMovies(pageNumber);\n        console.log(this.props.getPopulerMovies)\n    }\n\n    render() {\n        const populerMovies = this.props.populerMovies.populerMovies;\n        this.state.genreNames = this.props.populerMovies.genreIds;\n        if(populerMovies.results !== undefined) {\n            return (\n                <div>\n                    <section className=\"section section--first section--bg\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"section__wrap\">\n                                        <h2 className=\"section__title\">Popüler Filmler</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <br />\n                    <div className=\"catalog\">\n                        <PopulerList populerList={populerMovies} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={this.props.populerMovies.populerMovies.total_results} className={\"col-6 col-sm-4 col-lg-3 col-xl-3\"}></PopulerList>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <p className=\"section__text\">{populerMovies.total_results} sonuç görüntüleniyor...</p>\n                            <div className=\"col-12\">\n                                <ReactPaginate pageCount={populerMovies.total_pages} pageRangeDisplayed={2} previousLabel=\"<\" nextLabel=\">\" \n                                    onPageChange={(page) => this.onPageChange(page)} \n                                    breakClassName={'paginator__item'}\n                                    breakLinkClassName={'page-link'}\n                                    containerClassName={'paginator'}\n                                    pageClassName={'paginator__item'}\n                                    pageLinkClassName={'page-link'}\n                                    previousClassName={'paginator__item'}\n                                    previousLinkClassName={'paginator__item paginator__item--prev'}\n                                    nextClassName={'paginator__item'}\n                                    activeClassName={'paginator__item paginator__item--active'} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )     \n        }else {\n            return ( <div>Yükleniyor</div>)\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies:state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getPopulerMovies,\n    getGenreIds\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Populer)","/Users/selinoser/Desktop/github/removieact/src/components/Movies/MovieDetail.js",["104"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getMovieById } from '../../store/actions/movieDetailAction';\nimport { MdStar } from 'react-icons/md';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nclass MovieDetail extends Component {\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        this.props.getMovieById(id)\n    }\n\n    render() {\n        const movieDetail = this.props.movieById.movieById;\n        if(movieDetail != undefined) {\n            const imgBackgroundUrl = \"https://image.tmdb.org/t/p/original/\" + movieDetail.backdrop_path;\n            const imgUrl = \"https://image.tmdb.org/t/p/original/\";\n            const poster = movieDetail.poster_path == null ? \"https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png\" : imgUrl + movieDetail.poster_path;\n\n            var sectionStyle = {\n                backgroundImage: `url(${imgBackgroundUrl})`,\n                backgroundSize : \"cover\",\n                backgroundPosition : \"center center\",\n                backgroundRepeat: \"no-repeat no-repeat\"\n            };\n          \n            return (\n                <section className=\"details\">\n                    <div className=\"details__bg\" style={sectionStyle}></div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <h1 className=\"details__title\">{movieDetail.title}</h1>\n                            </div>\n                            <div className=\"col-12\">\n                                <div className=\"card card--details card--series\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 col-sm-4 col-md-4 col-lg-3 col-xl-3\">\n                                            <div className=\"card__cover\">\n                                                <img src={poster} alt={movieDetail.title} />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 col-sm-8 col-md-8 col-lg-9 col-xl-9\">\n                                            <div className=\"card__content\">\n                                                <div className=\"card__wrap\">\n                                                    <span className=\"card__rate\"><MdStar></MdStar> {movieDetail.vote_average}</span>\n                                                </div>\n                                                <ul className=\"card__meta\">\n                                                    <li><span>Türler:</span> { movieDetail.genres.map(item=> { return (<Link>{item.name}</Link>) }) }</li>\n                                                    <li><span>Yayın Tarihi:</span> {moment(movieDetail.release_date).format('DD-MM-YYYY') }</li>\n                                                    <li><span>Süre:</span> {movieDetail.runtime} dk</li>\n                                                    <li><span>Ülkeler:</span> { movieDetail.production_countries.map(item=> { return (<Link>{item.name}</Link>) })} </li>\n                                                </ul>\n                                                <div className=\"card__description card__description--details\">\n                                                    {movieDetail.overview}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )\n        }else {\n            return(\n                <div>Yükleniyor...</div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    movieById: state.movieById,\n})\n\nconst mapDispatchToProps = {\n\tgetMovieById\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail)","/Users/selinoser/Desktop/github/removieact/src/components/Layout/Error.js",[],"/Users/selinoser/Desktop/github/removieact/src/components/Layout/Footer.js",[],"/Users/selinoser/Desktop/github/removieact/src/components/Movies/TopRated.js",["105"],"import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {getGenreIds,getMovieTopRated} from '../../store/actions/moviesAction';\nimport moment from 'moment';\nimport TopRatedList from './TopRatedList';\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\"\n\nconst initialState = {\n    genreNames : [],\n}\n\nclass Trending extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.getMovieGenreName = this.getMovieGenreName.bind(this);\n      }\n\n    componentDidMount(){\n        const date = moment(new Date()).format(\"YYYY-MM-DD\")\n        this.props.getMovieTopRated()\n        this.props.getGenreIds()\n        this.setState({\n            nowDate: date\n        })\n    }\n\n    getMovieGenreName(genre_ids){\n        let genreIds = []\n        let genreNames = []\n        let genres = \"\"\n        this.state.genreNames.forEach((genre,index) => {\n            genreIds[index] = genre.id;\n            genreNames[index] = genre.name;\n        });\n      \n        genre_ids.forEach((genre) => {\n            let genreIndex = genreIds.indexOf(genre);\n            let genreName = genreNames[genreIndex];\n            genres += genreName + ', ';\n        })\n        genres = genres.slice(0, -2);\n        return genres\n    }\n\n    render() {\n        const movieTrending = this.props.populerMovies.movieTopRated;\n        this.state.genreNames = this.props.populerMovies.genreIds;\n        if(movieTrending !== undefined) {\n            return (\n                <div>\n                    <section className=\"section section--first section--bg\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"section__wrap\">\n                                        <h2 className=\"section__title\">En çok beğenilen 10 Film</h2>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <br />\n                    <div className=\"catalog\">\n                        <TopRatedList topRatedList={movieTrending} imgUrl={imgUrl} getMovieGenreName={this.getMovieGenreName} count={10} className={\"col-6 col-sm-4 col-lg-3 col-xl-3\"}></TopRatedList>\n                    </div>\n                </div>\n            )\n        }else {\n            return ( <div>Yükleniyor</div>)\n        }\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    populerMovies:state.populerMovies,\n})\n\nconst mapDispatchToProps = {\n    getMovieTopRated,\n    getGenreIds\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trending)","/Users/selinoser/Desktop/github/removieact/src/store/reducers/movieReducer.js",[],"/Users/selinoser/Desktop/github/removieact/src/store/reducers/movieDetailReducer.js",[],"/Users/selinoser/Desktop/github/removieact/src/components/Movies/PopulerList.js",[],"/Users/selinoser/Desktop/github/removieact/src/components/Movies/TopRatedList.js",[],"/Users/selinoser/Desktop/github/removieact/src/components/SearchResults.js",[],"/Users/selinoser/Desktop/github/removieact/src/store/actions/movieDetailAction.js",[],"/Users/selinoser/Desktop/github/removieact/src/store/actions/moviesAction.js",[],"/Users/selinoser/Desktop/github/removieact/src/store/types.js",[],{"ruleId":"106","severity":1,"message":"107","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":23},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"106","severity":1,"message":"107","line":11,"column":10,"nodeType":"108","messageId":"109","endLine":11,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":71,"column":13,"nodeType":"116","endLine":71,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":23},{"ruleId":"117","severity":2,"message":"118","line":10,"column":10,"nodeType":"119","endLine":10,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":46,"column":9,"nodeType":"116","endLine":46,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":51,"column":9,"nodeType":"116","endLine":51,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":16,"column":24,"nodeType":"122","messageId":"123","endLine":16,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":49,"column":9,"nodeType":"116","endLine":49,"endColumn":19},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","react/jsx-no-undef","'HashRouter' is not defined.","JSXIdentifier","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]